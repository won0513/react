{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\law\\\\src\\\\components\\\\search_conts.js\";\nimport React from 'react';\nimport Header from './header.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search_conts({\n  list,\n  word,\n  page\n}) {\n  const curList = list.slice((page - 1) * 10, page * 10);\n  curList.map(string => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"left\",\n      children: string.map((str, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: idx === 0 ? str.map(s => {\n            return s === word ? console.log(word) : null;\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"div2\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: curList.map(string => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"left\",\n          children: string.map((str, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: idx === 0 ? str.map(s => {\n                return s === word ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-title bold\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-title\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this);\n              }) : str.map(s => {\n                return s === word ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-cont bold\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-cont\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = Search_conts;\nexport default Search_conts;\nvar _c;\n$RefreshReg$(_c, \"Search_conts\");","map":{"version":3,"names":["React","Header","useState","useEffect","jsxDEV","_jsxDEV","Search_conts","list","word","page","curList","slice","map","string","class","children","str","idx","s","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/law/src/components/search_conts.js"],"sourcesContent":["import React from 'react';\r\nimport Header from './header.js';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Search_conts({list, word, page}) {\r\n    const curList = list.slice((page-1)*10, page*10)\r\n    curList.map((string) => {\r\n        return(    \r\n        <li class=\"left\">\r\n        {\r\n            string.map((str, idx) => {\r\n               return (\r\n                <p>\r\n                {idx === 0 ? (\r\n                str.map((s) => {\r\n                    return(\r\n                        s === word ? (\r\n                            console.log(word)\r\n                        ) : (\r\n                            null\r\n                        )\r\n                    )\r\n                })\r\n                ) : ( null\r\n                )}\r\n                </p>\r\n               )\r\n            })\r\n        }\r\n        </li>\r\n        )\r\n    })\r\n    return (\r\n        <div class=\"div2\">\r\n            <ul>\r\n            {curList.map((string) => {\r\n                return(    \r\n                <li class=\"left\">\r\n                {\r\n                    string.map((str, idx) => {\r\n                       return (\r\n                        <p>\r\n                        {idx === 0 ? (\r\n                        str.map((s) => {\r\n                            return(\r\n                                s === word ? (\r\n                                    <span class = \"div2-title bold\">{ s }</span>\r\n                                ) : (\r\n                                    <span class = \"div2-title\">{ s }</span>\r\n                                )\r\n                            )\r\n                        })\r\n                        ) : (\r\n                        str.map((s) => {\r\n                            return(\r\n                                s === word ? (\r\n                                    <span class = \"div2-cont bold\">{ s }</span>\r\n                                ) : (\r\n                                    <span class = \"div2-cont\">{ s }</span>\r\n                                )\r\n                                \r\n                            )\r\n                        })\r\n                        )}\r\n                        </p>\r\n                       )\r\n                    })\r\n                }\r\n                </li>\r\n                )\r\n            })}\r\n            </ul>   \r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\n\r\nexport default Search_conts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
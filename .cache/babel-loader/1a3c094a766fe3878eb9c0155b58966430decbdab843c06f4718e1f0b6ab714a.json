{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\law\\\\src\\\\components\\\\search_conts.js\";\nimport React from 'react';\nimport Header from './header.js';\nimport { useState, useEffect } from 'react';\nimport Paging from '../elements/page.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search_conts({\n  list,\n  word,\n  page,\n  total,\n  kind,\n  option\n}) {\n  let curList = [];\n  console.log(\"search conts, kind\", kind);\n  console.log(\"search conts, word\", word);\n  console.log(\"search conts, option\", option);\n  //kind가 list이면 즉 더보기 버튼을 클릭하기 전이면 3개만, 더보기 버튼을 클릭 후일때는 10개씩\n  {\n    kind === \"alist\" || kind === \"plist\" ? curList = list.slice(0, 3) : curList = list.slice((page - 1) * 10, page * 10);\n  }\n  const btnList = {\n    alist: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: total > 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          window.location.href = \"/search/\" + \"article\" + \"/\" + word + \"/\" + option;\n        },\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this),\n    plist: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: total > 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          window.location.href = \"/search/\" + \"precedent\" + \"/\" + word + \"/\" + option;\n        },\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this),\n    article: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Paging, {\n        p: page,\n        kind: kind,\n        total: total,\n        type: \"search\",\n        word: word,\n        option: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }, this),\n    precedent: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Paging, {\n        p: page,\n        kind: kind,\n        total: total,\n        type: \"search\",\n        word: word,\n        option: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, this)\n  };\n  console.log(\"search conts, page\", page);\n  curList.map(string => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      class: \"left\",\n      children: string.map((str, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: idx === 1 ? str.map(s => {\n            return s === word ? null : console.log(s);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  });\n  const onSubmit = async () => {\n    window.location.href = \"/search/\" + kind + \"/\" + word + \"/\" + option;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"div2\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: curList.map(string => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"left\",\n          children: string.map((str, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: idx === 0 ? str.map(s => {\n                return s === word ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-title bold\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-title\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this);\n              }) : idx === 1 && str.map(s => {\n                return s === word ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-cont bold\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"div2-cont\",\n                  children: s\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), btnList[kind]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_c = Search_conts;\nexport default Search_conts;\nvar _c;\n$RefreshReg$(_c, \"Search_conts\");","map":{"version":3,"names":["React","Header","useState","useEffect","Paging","jsxDEV","_jsxDEV","Search_conts","list","word","page","total","kind","option","curList","console","log","slice","btnList","alist","children","type","onClick","window","location","href","fileName","_jsxFileName","lineNumber","columnNumber","plist","article","p","precedent","map","string","class","str","idx","s","onSubmit","_c","$RefreshReg$"],"sources":["C:/projects/law/src/components/search_conts.js"],"sourcesContent":["import React from 'react';\r\nimport Header from './header.js';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Paging from '../elements/page.js';\r\nfunction Search_conts({list, word, page, total, kind, option}) {\r\n    let curList = []\r\n    console.log(\"search conts, kind\", kind)\r\n    console.log(\"search conts, word\", word)\r\n    console.log(\"search conts, option\", option)\r\n    //kind가 list이면 즉 더보기 버튼을 클릭하기 전이면 3개만, 더보기 버튼을 클릭 후일때는 10개씩\r\n    {kind ===\"alist\" || kind ===\"plist\" ? (curList = list.slice(0, 3)) : (curList = list.slice((page-1)*10, page*10))}\r\n    const btnList = {\r\n        alist: <p>{total > 3 && (<button type=\"button\" onClick={() => {\r\n            window.location.href = \"/search/\" + \"article\" + \"/\" + word + \"/\" + option ;}}>더보기</button>)}</p>,\r\n        plist: <p>{total > 3 && (<button type=\"button\" onClick={() => {\r\n            window.location.href = \"/search/\" + \"precedent\" + \"/\" + word + \"/\" + option ;}}>더보기</button>)}</p>,\r\n        article: <p><Paging p={page} kind={kind} total={total} type=\"search\" word={word} option={option}/></p>,\r\n        precedent: <p><Paging p={page} kind={kind} total={total} type=\"search\" word={word} option={option}/></p>\r\n    }\r\n    \r\n    console.log(\"search conts, page\", page);\r\n    curList.map((string) => {\r\n        return(    \r\n        <li class=\"left\">\r\n        {\r\n            string.map((str, idx) => {\r\n               return (\r\n                <p>\r\n                {idx === 1 ? (\r\n                str.map((s) => {\r\n                    return(\r\n                        s === word ? (\r\n                            null\r\n                        ) : (\r\n                            console.log(s)\r\n                        )\r\n                    )\r\n                })\r\n                ) : ( null\r\n                )}\r\n                </p>\r\n               )\r\n            })\r\n        }\r\n        </li>\r\n        )\r\n    })\r\n\r\n    const onSubmit = async () => {\r\n        window.location.href = \"/search/\" + kind + \"/\" + word + \"/\" + option \r\n    };\r\n    return (\r\n        <div class=\"div2\">\r\n            <ul>\r\n            {curList.map((string) => {\r\n                return(    \r\n                <li class=\"left\">\r\n                {\r\n                    string.map((str, idx) => {\r\n                       return (\r\n                        <p>\r\n                        {idx === 0 ? (\r\n                        str.map((s) => {\r\n                            return(\r\n                                s === word ? (\r\n                                    <span class = \"div2-title bold\">{ s }</span>\r\n                                ) : (\r\n                                    <span class = \"div2-title\">{ s }</span>\r\n                                )\r\n                            )\r\n                        })\r\n                        ) : (\r\n                            idx === 1 && (\r\n                                str.map((s) => {\r\n                                    return(\r\n                                        s === word ? (\r\n                                            <span class = \"div2-cont bold\">{ s }</span>\r\n                                        ) : (\r\n                                            <span class = \"div2-cont\">{ s }</span>\r\n                                        )\r\n                                        \r\n                                    )\r\n                                })\r\n                            )\r\n                        )}\r\n                        </p>\r\n                       )\r\n                    })\r\n                }\r\n                </li>\r\n                )\r\n            })}\r\n            </ul>\r\n            {btnList[kind]}\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\n\r\nexport default Search_conts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
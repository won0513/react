[{"C:\\projects\\law\\src\\components\\search_detail.js":"1","C:\\projects\\law\\src\\components\\login.js":"2","C:\\projects\\myproject\\law\\react\\src\\index.js":"3","C:\\projects\\myproject\\law\\react\\src\\App.jsx":"4","C:\\projects\\myproject\\law\\react\\src\\reportWebVitals.js":"5","C:\\projects\\myproject\\law\\react\\src\\components\\search_detail.js":"6","C:\\projects\\myproject\\law\\react\\src\\components\\home.js":"7","C:\\projects\\myproject\\law\\react\\src\\components\\tab.js":"8","C:\\projects\\myproject\\law\\react\\src\\components\\search.js":"9","C:\\projects\\myproject\\law\\react\\src\\components\\article_category.js":"10","C:\\projects\\myproject\\law\\react\\src\\components\\test.js":"11","C:\\projects\\myproject\\law\\react\\src\\components\\recommand.js":"12","C:\\projects\\myproject\\law\\react\\src\\components\\login.js":"13","C:\\projects\\myproject\\law\\react\\src\\components\\signup.js":"14","C:\\projects\\myproject\\law\\react\\src\\components\\search_box.js":"15","C:\\projects\\myproject\\law\\react\\src\\components\\search_conts.js":"16","C:\\projects\\myproject\\law\\react\\src\\components\\search_titlle.js":"17","C:\\projects\\myproject\\law\\react\\src\\components\\table.js":"18","C:\\projects\\myproject\\law\\react\\src\\elements\\page.js":"19","C:\\projects\\myproject\\law\\react\\src\\elements\\menubar.js":"20","C:\\projects\\myproject\\law\\react\\src\\components\\header.js":"21"},{"size":1805,"mtime":1693395467447,"results":"22","hashOfConfig":"23"},{"size":1970,"mtime":1693814445094,"results":"24","hashOfConfig":"23"},{"size":583,"mtime":1693202135087,"results":"25","hashOfConfig":"26"},{"size":2210,"mtime":1693804538007,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1693043552798,"results":"28","hashOfConfig":"26"},{"size":1805,"mtime":1694521438553,"results":"29","hashOfConfig":"26"},{"size":1748,"mtime":1694521509178,"results":"30","hashOfConfig":"26"},{"size":746,"mtime":1693646715448,"results":"31","hashOfConfig":"26"},{"size":3213,"mtime":1694524066518,"results":"32","hashOfConfig":"26"},{"size":4838,"mtime":1694521523181,"results":"33","hashOfConfig":"26"},{"size":4317,"mtime":1694521436559,"results":"34","hashOfConfig":"26"},{"size":2427,"mtime":1694450643194,"results":"35","hashOfConfig":"26"},{"size":1970,"mtime":1694521466168,"results":"36","hashOfConfig":"26"},{"size":1395,"mtime":1694521437647,"results":"37","hashOfConfig":"26"},{"size":3588,"mtime":1694535102817,"results":"38","hashOfConfig":"26"},{"size":4967,"mtime":1694534566374,"results":"39","hashOfConfig":"26"},{"size":452,"mtime":1693317271176,"results":"40","hashOfConfig":"26"},{"size":7209,"mtime":1694001814739,"results":"41","hashOfConfig":"26"},{"size":1217,"mtime":1693646723461,"results":"42","hashOfConfig":"26"},{"size":891,"mtime":1694535102824,"results":"43","hashOfConfig":"26"},{"size":958,"mtime":1694535102817,"results":"44","hashOfConfig":"26"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"gwxkcx",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1v1z6c",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},"C:\\projects\\law\\src\\components\\search_detail.js",["124","125","126","127","128","129"],[],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router\";\r\nimport Search_box from './search_box.js';\r\nimport Menubar from '../elements/menubar';\r\nimport Search_title from './search_titlle.js'\r\nimport Search_conts from './search_conts.js';\r\nimport Paging from '../elements/page.js';\r\n\r\nfunction Search_detail() {\r\n  const [searchData, setSearchData] = useState([]);\r\n  const {kind, query, option, page} = useParams();\r\n  console.log(query);\r\n  console.log(option);\r\n  console.log(\"search_detail\", kind);\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(\r\n        \"/search/\" + kind + \"/\" + query\r\n      );\r\n       console.log(result.data);\r\n       setSearchData(result.data);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n  return (\r\n    <div>\r\n    <header id=\"header\">\r\n      <p id=\"logo\">민법을 적용하는 법</p>\r\n      <Menubar/>\r\n      </header>\r\n    <nav id=\"nav\">&nbsp;</nav>\r\n    <div id=\"section\">\r\n      <Search_box opt={option} q={query}/>\r\n        \r\n      { (typeof searchData.dic === 'undefined') ? (\r\n      // fetch가 완료되지 않았을 경우에 대한 처리\r\n      <p>loding...</p>\r\n      ) : (\r\n      <div id=\"div\">\r\n        {kind === \"article\" ? (<Search_title name=\"민법 내용\" num={searchData.dic.total}/>)\r\n        : (<Search_title name=\"판례\" num={searchData.dic.total}/>)}\r\n\r\n        {searchData.dic.total > 0 ?\r\n          (<Search_conts kind={kind} option={option} list={searchData.dic.name_list} word={searchData.dic.word} page={page} total={searchData.dic.total}/>)\r\n        :(<p>검색 결과가 없습니다.</p>)}\r\n      </div>\r\n      )}\r\n    </div>\r\n    <aside id=\"aside\">&nbsp;</aside>\r\n    <footer></footer>\r\n  </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Search_detail;","C:\\projects\\law\\src\\components\\login.js",["130","131"],[],"\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\nimport { AiOutlineLock } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Login() {\r\n    const [id, setId] = useState(\"\");\r\n    const [pw, setPw] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const onIdChange = (e) => {\r\n      setId(e.target.value);\r\n    };\r\n    const onPwChange = (e) => {\r\n        setPw(e.target.value);\r\n      };\r\n    const nav = ()=> {navigate(-1)}\r\n    const handleSubmit = (e) => {\r\n        // submit을 할 때 페이지 자체가 새로고침이 되는 것을 막음\r\n        e.preventDefault();\r\n        console.log(id);\r\n        const formData = new FormData();\r\n        formData.append('id', id);\r\n        formData.append('password', pw);\r\n        console.log(formData);\r\n        axios.post('/login', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n        }\r\n        ).then((res) => typeof res.data === 'string' ? (alert(res.data)) : (\r\n          //navigate(-1))\r\n            nav)\r\n          );\r\n        \r\n        navigate(-1)\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h1>Login</h1>\r\n          <div className='loginInput'>\r\n            <AiOutlineUser className='loginIcon' size=\"50px\"/><input onChange={onIdChange} value={id} type=\"text\" placeholder=\"ID\"/>\r\n          </div>\r\n          <div className='loginInput'>\r\n            <AiOutlineLock className='loginIcon' size=\"50px\"/><input onChange={onPwChange} type=\"password\" placeholder=\"Password\" />\r\n          </div>\r\n          <input className=\"btn\" type=\"submit\" value=\"Log in\" />\r\n          <Link to=\"/sign-up\">sign up?</Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Login;","C:\\projects\\myproject\\law\\react\\src\\index.js",[],[],[],"C:\\projects\\myproject\\law\\react\\src\\App.jsx",["132","133","134","135","136","137"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\n\n/*function App() {\n  // state\n  const [data, setData] = useState({})\n\n  console.log('실행')\n  useEffect(() => \n    {\n    \tfetch(\"/users\", {headers: {\n        Accept: \"application / json\",\n      },}).then(\n          console.log(\"접속\")\n        ).then(\n          response => response.json()\n        ).then(\n          data => {\n            // 받아온 데이터를 data 변수에 update\n            setData(data);\n          }\n        ).catch(\n          (err) => console.log(err)\n        )\n    }, [])\n  return (\n    <div className='App'>\n      <h1>test 하는 중..</h1>\n      <div>\n        {}\n        { (typeof data.id === 'undefined') ? (\n          // fetch가 완료되지 않았을 경우에 대한 처리\n          <p>loding...</p>,\n          <p> n </p>\n        ) : (\n          <p>{data.name}</p>\n        )}\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;*/\n\n\n\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './components/home.js';\nimport Search from './components/search.js';\nimport Search_detail from './components/search_detail.js';\nimport Tab from './components/tab.js';\nimport Article_category from './components/article_category.js'\nimport Test from './components/test.js'\nimport Recommand from './components/recommand.js';\nimport Login from './components/login';\nimport Signup from './components/signup';\nfunction App() {\n  return (\n    <div className=\"App\">\n\t\t\t\t<Routes>\n          <Route path=\"/\" element={<Home/>}/>\n          <Route path=\"/search/:query/:option\" element={<Search/>}/>\n          <Route path=\"/search/:kind/:query/:option\" element={<Search_detail/>}/>\n          <Route path=\"/tab\" element={<Tab/>}/>\n          <Route path=\"/category/:kind/:c1/:c2\" element={<Article_category/>}/>\n          <Route path=\"/recommand\" element={<Recommand/>}/>\n          <Route path=\"/precedent/detail/:num/:p\" element={<Test/>}/>\n          <Route path=\"/signup\" element={<Signup/>}/>\n          <Route path=\"/login\" element={<Login/>}/>\n\t\t\t\t</Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\projects\\myproject\\law\\react\\src\\reportWebVitals.js",[],[],"C:\\projects\\myproject\\law\\react\\src\\components\\search_detail.js",["138","139","140","141","142","143"],[],"C:\\projects\\myproject\\law\\react\\src\\components\\home.js",["144","145","146"],[],"import React from 'react';\r\nimport Search_box from './search_box.js';\r\nimport Menubar from '../elements/menubar';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nfunction Home () {\r\n  \r\n  const [option, setOption] = useState(\"\");\r\n  const [loginData, setLoginData] = useState(\"\");\r\n  console.log(\"home, option:\", option)\r\n  useEffect(() => \r\n  {\r\n    setOption(\"1\")\r\n    console.log(\"home, option:\", option)\r\n    axios.get('/checkLogin').then((res) => setLoginData(res.data))\r\n    console.log(loginData)\r\n  }, [])\r\n  const handleClick = (e) => {\r\n    // submit을 할 때 페이지 자체가 새로고침이 되는 것을 막음\r\n    //e.preventDefault();\r\n    const formData = new FormData();\r\n    console.log(formData);\r\n    axios.get('/logout'\r\n    ).then((res) => console.log(res)).then(window.location.href = ('/'));\r\n  };\r\n\r\n  console.log(\"home, option:\", option)\r\n    return(\r\n      <div>\r\n        <header id=\"header\">\r\n          <p id=\"logo\">민법을 적용하는 법</p>\r\n          <Menubar/>\r\n          <p id=\"login\">\r\n            {typeof loginData !== 'undefined' && (loginData.isLoggedIn === false ? (\r\n              <Link to='/login'>로그인</Link>) : (\r\n                <p>\r\n                  {loginData.userId}님\r\n                  <button onClick={handleClick}>로그아웃</button>\r\n                </p>\r\n              )\r\n            )}\r\n          </p>\r\n          </header>\r\n        <nav id=\"nav\">&nbsp;</nav>\r\n        <div id=\"section\">\r\n          <Search_box opt={option}/>\r\n        </div>\r\n        <aside id=\"aside\">&nbsp;</aside>\r\n        <footer></footer>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\projects\\myproject\\law\\react\\src\\components\\tab.js",[],[],"C:\\projects\\myproject\\law\\react\\src\\components\\search.js",["147","148","149","150","151","152","153"],[],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router\";\r\nimport Search_box from './search_box.js';\r\nimport Menubar from '../elements/menubar';\r\nimport Search_title from './search_titlle.js'\r\nimport Search_conts from './search_conts.js';\r\nimport Paging from '../elements/page.js';\r\n\r\nfunction Search() {\r\n  const [searchData, setSearchData] = useState([]);\r\n  const {query, option} = useParams();\r\n  console.log(query);\r\n  console.log(option);\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(\r\n        \"/search?query=\" + query + \"&option=\" + option\r\n      );  \r\n       console.log(result.data);\r\n       setSearchData(result.data);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <div>\r\n    <header id=\"header\">\r\n      <p id=\"logo\">민법을 적용하는 법</p>\r\n      <Menubar/>\r\n      </header>\r\n    <nav id=\"nav\">&nbsp;</nav>\r\n    <div id=\"section\">\r\n      <Search_box opt={option} q={query}/>\r\n        \r\n      { (typeof searchData.a_dic === 'undefined') ? (\r\n      // fetch가 완료되지 않았을 경우에 대한 처리\r\n      <p>loding...</p>\r\n      ) : (\r\n      <div id=\"div\">\r\n        {String(option) !== \"3\"  && (\r\n          <div>\r\n          <Search_title name=\"민법 내용\" num={searchData.a_dic.total}/>\r\n          {searchData.a_dic.total > 0 ?\r\n          (<Search_conts kind=\"alist\" option={option} list={searchData.a_dic.name_list} word={searchData.a_dic.word} page={searchData.a_dic.page} total={searchData.a_dic.total}/>)\r\n        :(<p>검색 결과가 없습니다.</p>)}\r\n          </div>\r\n          )}\r\n        \r\n        {String(option) !== \"2\"  && (\r\n          <div>\r\n          <Search_title name=\"판례\" num={searchData.p_dic.total}/>\r\n          {searchData.p_dic.total > 0 ?\r\n          (<Search_conts kind=\"plist\" option={option} list={searchData.p_dic.name_list} word={searchData.p_dic.word} page={searchData.p_dic.page} total={searchData.p_dic.total}/>)\r\n          :(<p>검색 결과가 없습니다.</p>)}\r\n          </div>\r\n          )}\r\n          \r\n      </div>\r\n      )}\r\n    </div>\r\n    <aside id=\"aside\">&nbsp;</aside>\r\n    <footer></footer>\r\n  </div>\r\n    );\r\n\r\n};\r\n/*function Search() {\r\n    // state\r\n    const [data, setData] = useState({})\r\n  \r\n    console.log('실행')\r\n    useEffect(() => \r\n      {\r\n          fetch(\"/users\", {headers: {\r\n          Accept: \"application / json\",\r\n        },}).then(\r\n            console.log(\"접속\")\r\n          ).then(\r\n            response => response.json()\r\n          ).then(\r\n            data => {\r\n              // 받아온 데이터를 data 변수에 update\r\n              setData(data);\r\n            }\r\n          ).catch(\r\n            (err) => console.log(err)\r\n          )\r\n      }, [])\r\n    return (\r\n      <div className='App'>\r\n        <h1>test 하는 중..</h1>\r\n        <div>\r\n          {}\r\n          { (typeof data.a_dic === 'undefined') ? (\r\n            // fetch가 완료되지 않았을 경우에 대한 처리\r\n            <p>loding...</p>,\r\n            <p> n </p>\r\n          ) : (\r\n            <p>{data.a_dic}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }*/\r\n  \r\nexport default Search;","C:\\projects\\myproject\\law\\react\\src\\components\\article_category.js",["154","155","156","157"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from \"./table.js\";\r\nimport Menubar from '../elements/menubar';\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction TabContent(props){\r\n  console.log(props.tabContList)\r\n  let cList2 = props.tabContList[props.tab]\r\n  return <Nav className=\"me-auto\">{cList2.map((c, idx)=>{\r\n    return (<Nav.Link onClick={()=>{ \r\n      let url = ''\r\n      props.kind === 'article' ? (url += \"/app/category/article\" + \"/\" + props.tab + \"/\" + idx) :\r\n      (url += \"/app/category/precedent\" + \"/\" + props.tab + \"/\" + c)\r\n      window.location.href =url}}><span  className=\"fontFt\">{c}</span></Nav.Link>)})}</Nav>\r\n}\r\n\r\nfunction Tab({tabList, tabContList, c1, c2, kind}) {\r\n  let [tab, setTab] = useState(c1);\r\n  return (\r\n  <div><Nav className=\"mt-5 mb-3\" variant=\"tabs\" defaultActiveKey={c1}>\r\n      {tabList.map((t, idx)=> {\r\n          console.log(t)\r\n          let k = t;\r\n          return (    \r\n          <Nav.Item>\r\n          <Nav.Link eventKey={k} onClick={()=>{setTab(t);/*window.location.href = \"/article\" + \"/\" + t + \"/\" + c2;*/}}><span  className=\"fontFt\">{t}</span></Nav.Link>\r\n          </Nav.Item>\r\n          )\r\n      }\r\n      )}\r\n  </Nav>\r\n  <Navbar bg=\"light\" expand=\"xxl\">\r\n  <Container>\r\n  <Navbar.Brand href=\"#home\"><span className=\"fontTw\">{tab}</span></Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n  <TabContent tab={tab} tabContList={tabContList} tabList={tabList} kind={kind}/>\r\n  </Navbar.Collapse></Container></Navbar>\r\n  </div>\r\n  \r\n)\r\n}\r\n\r\n/*<Navbar bg=\"light\" expand=\"lg\">\r\n  <Container>\r\n    <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto\">\r\n        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n        <Nav.Link href=\"#link\">Link</Nav.Link>\r\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>*/\r\n\r\nexport default function Article_category() {\r\n    let [getData, setGetData] = useState(0);\r\n  const {kind, c1, c2} = useParams();\r\n  \r\n  const [loginData, setLoginData] = useState(\"\");\r\n  const handleClick = (e) => {\r\n    // submit을 할 때 페이지 자체가 새로고침이 되는 것을 막음\r\n    //e.preventDefault();\r\n    axios.get('/logout'\r\n    ).then((res) => console.log(res)).then(window.location.href = ('/app/category/' + kind + '/' +  c1 + '/' + c2));\r\n  };\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(\r\n        \"/\" + kind + '/' + c1 +\"/\" + c2\r\n      );\r\n       console.log(result.data);\r\n       setGetData(result.data);\r\n    }\r\n    async function fetchData2() {\r\n       const login = await axios.get(\r\n        '/checkLogin?type=' + kind\r\n      );\r\n       setLoginData(login.data);\r\n    }\r\n    \r\n    fetchData().then(()=>fetchData2());\r\n  }, [])\r\n\r\n  return (\r\n    \r\n    <div>\r\n    <header id=\"header\">\r\n      <p id=\"logo\">민법을 적용하는 법</p>\r\n      <Menubar/>\r\n      <p id=\"login\">\r\n            {typeof loginData !== 'undefined' && (loginData.isLoggedIn === false ? (\r\n              <Link to='/login'>로그인</Link>) : (\r\n                <p>\r\n                  {loginData.userId}님\r\n                  <button onClick={handleClick}>로그아웃</button>\r\n                </p>\r\n              )\r\n            )}\r\n          </p>\r\n      </header>\r\n    <nav id=\"nav\">&nbsp;</nav>\r\n    <div id=\"section\">\r\n    <div>\r\n        {(typeof getData.c_list2 === 'undefined') ? (\r\n      // fetch가 완료되지 않았을 경우에 대한 처리\r\n      <p>loding...</p>\r\n      ) : ((typeof getData.c_list1 === 'undefined') || (<div>\r\n            <Tab tabList={getData.c_list1} tabContList={getData.c_list2} c1={c1} c2={c2} kind={kind}/>\r\n              {typeof loginData.lawBookmark === 'undefined' && typeof loginData.preceBookmark === 'undefined' ? (<p>loding...</p>) : (\r\n                <Table list={getData.dic.name_list} total={getData.dic.total} kind={kind} \r\n              isLoggedIn={loginData.isLoggedIn} lawBookmark={loginData.lawBookmark}/>\r\n              )}\r\n            </div>\r\n        ))}\r\n    </div>\r\n    </div>\r\n    <aside id=\"aside\">&nbsp;</aside>\r\n    <footer></footer>\r\n  </div>\r\n  )\r\n}","C:\\projects\\myproject\\law\\react\\src\\components\\test.js",["158","159"],[],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router\";\r\nimport Search_box from './search_box.js';\r\nimport Menubar from '../elements/menubar';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Tabel({p_list}) {\r\n    return (\r\n        <table class=\"table align-middle fontFt left\">\r\n                <thead><tr><th id=\"t1\">구분</th><th>내용</th></tr></thead>\r\n                <tbody>\r\n                    {p_list.map((pl) => {\r\n                        return(\r\n                            <tr>\r\n                                <td class=\"align-middle\"><p class=\"widthTh\">{pl[0]}</p></td>\r\n                                <td class=\"align-middle\">\r\n                                    {pl[1].map((p) => {\r\n                                        return (\r\n                                            <p>{p}</p>\r\n                                        )\r\n                                    })}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    )}\r\n                </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nfunction Nav({name_list, total, num, p}) {\r\n    const [page, setPage] = useState(p);\r\n    console.log('현재 페이지', page)\r\n    let last_num = page*10;\r\n    \r\n    if (total < last_num) {\r\n      last_num =  total;\r\n    }\r\n    let [curList, setCurList] = useState(name_list.slice((page-1)*10, last_num));\r\n    console.log('nav', name_list)\r\n    const Paging = () => {\r\n        const handlePageChange = (page) => {\r\n          setPage(page);\r\n          last_num = page*10;\r\n          if (total < last_num) {\r\n            last_num =  total;\r\n          }\r\n          console.log(last_num)\r\n          setCurList(name_list.slice((page-1)*10, last_num))\r\n          console.log(\"test, curList:\", curList)\r\n          console.log(\"test, page2:\", page)\r\n          //type === \"search\" &&(window.location.href = \"/search/\" + kind + \"/\" + word + \"/\" + option + \"/\" + page)\r\n        };\r\n      \r\n        return (\r\n          <div>\r\n          <Pagination\r\n            class=\"widthFt\"\r\n            activePage={page} // 현재 페이지\r\n            itemsCountPerPage={10} // 한 페이지랑 보여줄 아이템 갯수\r\n            totalItemsCount={total} // 총 아이템 갯수\r\n            pageRangeDisplayed={3} // paginator의 페이지 범위\r\n            prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\r\n            nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\r\n            onChange={handlePageChange} // 페이지 변경을 핸들링하는 함수\r\n          />\r\n          </div>\r\n        );\r\n      };\r\n\r\n\r\n    return (\r\n        <div className='fontFt'>\r\n        <ul>\r\n            {curList.map((n) => {\r\n            return (\r\n                <li>{n[0] === num ? (\r\n                <Link  style={{ textDecoration: \"none\" }} id =\"active-li\">{ n[1] }</Link>\r\n            ) : (\r\n            <Link  style={{ textDecoration: \"none\" }} onClick={() => window.location.href = '/app/precedent/detail/' + n[0] + '/' + page}>{ n[1] }</Link>\r\n                \r\n            )}</li>\r\n            )\r\n        })}\r\n\r\n        </ul>\r\n        <Paging/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Test() {\r\n  let [searchData, setSearchData] = useState({});\r\n  const {num, p} = useParams();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(\r\n        \"/precedent/detail/\" + num\r\n      );\r\n       console.log(result.data);\r\n       setSearchData(result.data);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n  return (\r\n    <div>\r\n    <header id=\"header\">\r\n      <p id=\"logo\">민법을 적용하는 법</p>\r\n      <Menubar/>\r\n      <p id=\"login\">&nbsp;</p>\r\n      </header>\r\n    <nav id=\"nav\">\r\n    {typeof searchData.p_dic === 'undefined' ? (\r\n        <p> </p>\r\n        ) : (\r\n            <Nav name_list={searchData.p_dic.name_list} total={searchData.p_dic.total} num={num} p={p}/>\r\n        )}\r\n    </nav>\r\n    <div id=\"section\">\r\n        {typeof searchData.p_dic === 'undefined' ? (\r\n            <p>loading...</p>\r\n        ) : (\r\n            <Tabel p_list={searchData.preceList[0]}/>\r\n        )}\r\n    </div>\r\n    <aside id=\"aside\">&nbsp;</aside>\r\n    <footer></footer>\r\n  </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Test;","C:\\projects\\myproject\\law\\react\\src\\components\\recommand.js",["160","161","162","163","164","165"],[],"import React from 'react';\r\nimport Menubar from '../elements/menubar';\r\nimport { useState, useEffect } from 'react';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nfunction Recommand () {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [result, setResult] = useState({});\r\n  const [check, setCheck] = useState(\"0\");\r\n  const onUiChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    // submit을 할 때 페이지 자체가 새로고침이 되는 것을 막음\r\n    e.preventDefault();\r\n    setCheck('submit');\r\n    const formData = new FormData();\r\n    formData.append('input', userInput)\r\n    console.log(formData);\r\n    axios.post('/pan', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n    }).then((res)=> setResult(res.data)).then(typeof result !== 'undefined' && (console.log(result)))\r\n  };\r\n    return(\r\n      <div>\r\n        <header id=\"header\">\r\n          <p id=\"logo\">민법을 적용하는 법</p>\r\n          <Menubar/>\r\n          <p id=\"login\">&nbsp;</p>\r\n          </header>\r\n        <nav id=\"nav\">&nbsp;</nav>\r\n        <div id=\"section\">\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea onChange={onUiChange} name=\"input\" cols=\"50\" rows=\"5\" value={userInput} placeholder=\"여기에 써주세요~\"></textarea>\r\n            <input className=\"btn\" type=\"submit\" value=\"완료\"/>\r\n          </form>\r\n          {check === 'submit' && (\r\n            typeof result.pan_list === 'undefined' ? (\r\n              <p>loading...</p>) : (\r\n                <table class=\"table table-hover fontFt\">\r\n                <thead><tr><th id=\"t1\">번호</th><th>판시사항</th></tr></thead>\r\n                <tbody>\r\n                  {result.pan_list.map((r) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{r[0]}</td>\r\n                        <td>\r\n                        {r[1].map((s) => {\r\n                          return (\r\n                            <p>{s}</p>\r\n                          )\r\n                        })}\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n                </table>\r\n              ))}\r\n        </div>\r\n        <aside id=\"aside\">&nbsp;</aside>\r\n        <footer></footer>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Recommand;","C:\\projects\\myproject\\law\\react\\src\\components\\login.js",["166","167"],[],"C:\\projects\\myproject\\law\\react\\src\\components\\signup.js",["168"],[],"\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n    const [id, setId] = useState(\"\");\r\n    const [pw, setPw] = useState(\"\");\r\n    const onIdChange = (e) => {\r\n      setId(e.target.value);\r\n    };\r\n    const onPwChange = (e) => {\r\n        setPw(e.target.value);\r\n      };\r\n    const handleSubmit = (e) => {\r\n        // submit을 할 때 페이지 자체가 새로고침이 되는 것을 막음\r\n        e.preventDefault();\r\n        console.log(id);\r\n        const formData = new FormData();\r\n        formData.append('id', id);\r\n        formData.append('password', pw);\r\n        console.log(formData);\r\n        axios.post('/signup', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n        }\r\n        ).then((res) => typeof res.data === 'string' && (alert(res.data)));\r\n    };\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h1>Login</h1>\r\n          <input onChange={onIdChange} value={id} type=\"text\" placeholder=\"ID\" />\r\n          <input onChange={onPwChange} type=\"password\" placeholder=\"Password\" />\r\n          <input className=\"btn\" type=\"submit\" value=\"Log in\" />\r\n          <Link to=\"/sign-up\">sign up?</Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Signup;","C:\\projects\\myproject\\law\\react\\src\\components\\search_box.js",["169","170"],[],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport {useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction Search_box({opt, q}) {\r\n    const [query, setQuery] = useState(\"\");\r\n    let [option, setOption] = useState(\"\");\r\n    useEffect(() => \r\n    {\r\n      setOption(opt)\r\n      setQuery(q)\r\n  }, [])\r\n    console.log(\"searchbox, option\", option)\r\n\r\n    /*function OnSubmit(){\r\n      useEffect(() => \r\n    {\r\n      (option === '' && (opt === 'undifined' ? (setOption(\"1\")): (setOption(opt)))).then(\r\n        console.log('new option', option)\r\n      ).then(\r\n        \r\n      query === 'undefined' && (setQuery(q))  \r\n      ).then(\r\n      window.location.href = \"/search/\" + query + \"/\" + option\r\n      )\r\n  }, [])\r\n    }*/\r\n    /*const promise = new Promise((resolve, reject) => {\r\n      option === '' && (opt === 'undifined' ? (setOption(\"1\")): (setOption(opt)))\r\n      console.log('new option', option)\r\n      query === 'undefined' && (setQuery(q))  \r\n    });*/\r\n    const navigate = useNavigate();\r\n\r\n    const onSubmit = async () => {\r\n      option === '' ?(window.location.href = \"/search/\" + query + \"/\" + opt ) : (\r\n        window.location.href = \"/search/\" + query + \"/\" + option \r\n      )\r\n    };\r\n\r\n    const onOptChange = (e) => {\r\n      setOption(e.target.value);\r\n      console.log(option);\r\n    };\r\n    const optList = ['통합검색', '민법', '판례'];\r\n    return (\r\n     <div>\r\n      <select name=\"option\" id=\"option\" onChange={onOptChange}>\r\n      {optList.map((o, idx) => {\r\n        return(  \r\n          String(idx+1) === String(opt) ? (\r\n            <option value={idx+1} class=\"opt\" selected>{ o }</option>\r\n            ) : (\r\n              <option value={idx+1} class=\"opt\">{ o }</option>\r\n            )\r\n        )\r\n    })}\r\n      </select>\r\n      {\r\n        q === 'undefined' ? (\r\n          <input id=\"query\" type=\"text\" placeholder=\"검색어를 입력해 주세요\"\r\n      onChange={(e) => {\r\n      setQuery(e.target.value);\r\n      console.log(query);\r\n      }}></input>\r\n        ) : (\r\n          <input id=\"query\" type=\"text\"\r\n      onChange={(e) => {\r\n      setQuery(e.target.value);\r\n      console.log('q있음', query);\r\n      }} value={query}></input>\r\n        )\r\n      }\r\n      \r\n  \r\n      <button id=\"icon\"\r\n       type=\"button\"\r\n       onClick={() => {\r\n       onSubmit();\r\n       }}><i className=\"bi bi-search\"></i></button>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\n/*function Search_box() {\r\n  // form 가져오기\r\n //let opt = document.getElementById(\"option\");\r\n let query = document.getElementById(\"query\");\r\n let formData = new FormData();\r\n //formData.append(\"opt\", opt);\r\n formData.append(\"query\", query);\r\n\r\n const SearchUp = (e) => {\r\n  e.preventDefault();\r\n  \r\n  fetch(\"/seach\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n    body: new FormData(search),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok === true) {\r\n        return response.json();\r\n      }\r\n      throw new Error(\"에러 발생!\");\r\n    })\r\n    .catch((error) => {\r\n      alert(error);\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n    });\r\n  };\r\n    return(\r\n          <div className=\"Search_box\">\r\n          <form name=\"sform\" onSubmit={SearchUp} method=\"get\" id=\"search\">\r\n              \r\n            <input type=\"text\" name=\"name\" value=\"Bora\"></input>\r\n            <input type=\"text\" name=\"surname\" value=\"Lee\"></input>\r\n            <input type=\"submit\"></input>\r\n          </form>\r\n          </div>\r\n          \r\n          \r\n    )\r\n  \r\n}*/\r\n\r\n\r\n\r\n\r\n\r\nexport default Search_box;","C:\\projects\\myproject\\law\\react\\src\\components\\search_conts.js",["171","172","173","174","175","176","177"],[],"import React from 'react';\r\nimport Header from './header.js';\r\nimport { useState, useEffect } from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nfunction Search_conts({list, word, total, kind, option}) {\r\n    let [curList, setCurList] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const Paging = () => {\r\n        const handlePageChange = (page) => {\r\n          setPage(page);\r\n          let last_num = page*10;\r\n          if (total < last_num) {\r\n            last_num =  total;\r\n          }\r\n          setCurList(list.slice((page-1)*10, last_num))\r\n          console.log(\"page, curList:\", curList)\r\n          console.log(\"page, page2:\", page)\r\n          console.log('page, kind', kind)\r\n          //type === \"search\" &&(window.location.href = \"/search/\" + kind + \"/\" + word + \"/\" + option + \"/\" + page)\r\n        };\r\n      \r\n        return (\r\n          <div>\r\n          <Pagination\r\n            activePage={page} // 현재 페이지\r\n            itemsCountPerPage={10} // 한 페이지랑 보여줄 아이템 갯수\r\n            totalItemsCount={total} // 총 아이템 갯수\r\n            pageRangeDisplayed={5} // paginator의 페이지 범위\r\n            prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\r\n            nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\r\n            onChange={handlePageChange} // 페이지 변경을 핸들링하는 함수\r\n          />\r\n          </div>\r\n        );\r\n      };\r\n\r\n    console.log(\"search conts, kind\", kind)\r\n    console.log(\"search conts, word\", word)\r\n    console.log(\"search conts, option\", option)\r\n    \r\n    console.log(\"search conts, list\", list)\r\n    useEffect(() => {\r\n        //kind가 list이면 즉 더보기 버튼을 클릭하기 전이면 3개만, 더보기 버튼을 클릭 후일때는 10개씩\r\n        {kind ===\"alist\" ? (setCurList(list.slice(0, 3))) : (kind ===\"plist\" ? (setCurList(list.slice(0, 3))) : (setCurList(list.slice((page-1)*10, page*10))))}\r\n\r\n      }, [])\r\n    console.log(curList)\r\n    const btnList = {\r\n        alist: <p>{total > 3 && (<button type=\"button\" onClick={() => {\r\n            window.location.href = \"/search/\" + \"article\" + \"/\" + word + \"/\" + option;}}>더보기</button>)}</p>,\r\n        plist: <p>{total > 3 && (<button type=\"button\" onClick={() => {\r\n            window.location.href = \"/search/\" + \"precedent\" + \"/\" + word + \"/\" + option;}}>더보기</button>)}</p>,\r\n        article: <p>\r\n        <div>\r\n        <Paging/>\r\n        </div></p>,\r\n        precedent: <p>\r\n        <div>\r\n        <Paging/>\r\n        </div></p>\r\n    }\r\n    \r\n    console.log(\"search conts, page\", page);\r\n    /*curList.map((string) => {\r\n        return(    \r\n        <li class=\"left\">\r\n        {\r\n            string.map((str, idx) => {\r\n               return (\r\n                <p>\r\n                {idx === 1 ? (\r\n                str.map((s) => {\r\n                    return(\r\n                        s === word ? (\r\n                            null\r\n                        ) : (\r\n                            console.log(\"log\", s)\r\n                        )\r\n                    )\r\n                })\r\n                ) : ( null\r\n                )}\r\n                </p>\r\n               )\r\n            })\r\n        }\r\n        </li>\r\n        )\r\n    })*/\r\n\r\n    return (\r\n        <div class=\"div2\">\r\n            <ul>\r\n            {curList.map((string) => {\r\n                return(    \r\n                <li class=\"left\">\r\n                {\r\n                    string.map((str, idx) => {\r\n                       return (\r\n                        <p>\r\n                        {idx === 0 ? (\r\n                        str.map((s) => {\r\n                            return(\r\n                                s === word ? (\r\n                                    <span class = \"div2-title bold\">{ s }</span>\r\n                                ) : (\r\n                                    <span class = \"div2-title\">{ s }</span>\r\n                                )\r\n                            )\r\n                        })\r\n                        ) : (\r\n                            idx === 1 && (\r\n                                str.map((s) => {\r\n                                    return(\r\n                                        s === word ? (\r\n                                            <span class = \"div2-cont bold\">{ s }</span>\r\n                                        ) : (\r\n                                            <span class = \"div2-cont\">{ s }</span>\r\n                                        )\r\n                                        \r\n                                    )\r\n                                })\r\n                            )\r\n                        )}\r\n                        </p>\r\n                       )\r\n                    })\r\n                }\r\n                </li>\r\n                )\r\n            })}\r\n            </ul>\r\n            {btnList[kind]}\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\n\r\nexport default Search_conts;","C:\\projects\\myproject\\law\\react\\src\\components\\search_titlle.js",["178"],[],"import React from 'react';\r\nimport Header from './header.js';\r\n\r\nfunction Search_title({name, num}) {\r\n    return (\r\n        <div class = \"div1\">\r\n        <p class=\"div1-title\">{name}</p>\r\n        <p class= 'div1-sub'>\r\n            <ul>\r\n            <li class=\"div1-sub1\"></li>\r\n            <li class=\"div1-sub2\">&nbsp;&nbsp;&nbsp;&nbsp; (총 {num} 건)</li>\r\n            </ul>\r\n        </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Search_title;","C:\\projects\\myproject\\law\\react\\src\\components\\table.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],[],"import React from 'react';\r\nimport Header from './header.js';\r\nimport axios from 'axios'\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AiOutlineStar } from \"react-icons/ai\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\n\r\nfunction Table({list, total, kind, isLoggedIn, lawBookmark}) {\r\n    let [curList, setCurList] = useState([]); //클릭됐는지(check) 여부에 따라 달라지는 리스트\r\n    const [page, setPage] = useState(1);\r\n    const [check, setCheck] = useState(0); //즐겨찾기 아이콘(별모양) 클릭 여부\r\n    let htmlList = [];\r\n    let [changeList, setChangeList] = useState([]); \r\n    let [result, setResult] = useState('');\r\n    var now = new Date();\t// 현재 날짜 및 시간\r\n    function generate_cgList(islin, clist) {\r\n      let new_l = [];\r\n      console.log(clist)\r\n      for (let i = 0; i < clist.length; i ++) {\r\n          new_l[i] = '<i class=\"bi bi-star\"></i>'\r\n      }\r\n      console.log(lawBookmark)\r\n      if (islin) {\r\n        for (let k = 0; k < lawBookmark.length; k++) {\r\n          for (let i = 0; i < clist.length; i ++) {\r\n            let num = clist[i][0].split('조')[0]\r\n            if (lawBookmark[k] == num) {\r\n              new_l[i] = '<i class=\"bi bi-star-fill\"></i>'\r\n              break\r\n            }\r\n          }\r\n          \r\n        }\r\n      }\r\n      setChangeList(new_l)\r\n      console.log(changeList)\r\n    }\r\n    function getData(n){\r\n      return new Promise( (resolve, reject) => {\r\n        setCurList(list.slice((page-1)*10, n))\r\n        \r\n        console.log(n)\r\n        console.log(list)\r\n        console.log(curList)\r\n        resolve(curList);\r\n      })\r\n    }\r\n\r\n    useEffect(() => {\r\n      var seconds = now.getTime();\r\n        console.log(\"초 : \", seconds);\r\n        //kind가 list이면 즉 더보기 버튼을 클릭하기 전이면 3개만, 더보기 버튼을 클릭 후일때는 10개씩\r\n        let new_l = [];\r\n        let last_num = page*10;\r\n        if (total < last_num) {\r\n          last_num =  total;\r\n        }\r\n        setCurList(list.slice((page-1)*10, last_num))\r\n        console.log('curList 바뀜!!!: ', curList )\r\n        //getData(last_num).then((curList)=> generate_cgList(isLoggedIn, curList,  last_num))\r\n        //console.log(new_l)\r\n        //setCurList(new_l)\r\n    }, [])\r\n    useEffect(() => {\r\n      console.log('curList 바뀜!!!: ', curList )\r\n      //kind가 list이면 즉 더보기 버튼을 클릭하기 전이면 3개만, 더보기 버튼을 클릭 후일때는 10개씩\r\n      \r\n      generate_cgList(isLoggedIn, curList)\r\n        \r\n      //getData(last_num).then((curList)=> generate_cgList(isLoggedIn, curList,  last_num))\r\n      //console.log(new_l)\r\n      //setCurList(new_l)\r\n  }, [curList])\r\n    console.log(curList)\r\n      const Paging = () => {\r\n        const handlePageChange = (page) => {\r\n          setPage(page);\r\n          let last_num = page*10;\r\n          if (total < last_num) {\r\n            last_num =  total;\r\n          }\r\n          setCurList(list.slice((page-1)*10, last_num))\r\n          /*let l = list.slice((page-1)*10, last_num);\r\n          setCurList(l);\r\n          console.log(l)*/\r\n\r\n          /*{l.length !== 0 && (\r\n            generate_cgList(isLoggedIn, l,  last_num)\r\n          )}*/\r\n        };\r\n        return (\r\n          <div>\r\n          <Pagination\r\n            activePage={page} // 현재 페이지\r\n            itemsCountPerPage={10} // 한 페이지랑 보여줄 아이템 갯수\r\n            totalItemsCount={total} // 총 아이템 갯수\r\n            pageRangeDisplayed={5} // paginator의 페이지 범위\r\n            prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\r\n            nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\r\n            onChange={handlePageChange} // 페이지 변경을 핸들링하는 함수\r\n          />\r\n          </div>\r\n        );\r\n      };\r\n    return (\r\n        <div class=\"div2\">\r\n            <table class=\"table table-hover fontFt\">\r\n                <thead><tr><th id=\"t1\"><span className=\"fontFt\">번호</span></th><th><span className=\"fontFt\">조목</span></th></tr></thead>\r\n                <tbody>\r\n            {curList.map((string, idx) => {\r\n              console.log(string);\r\n              console.log(changeList[idx]);\r\n              let url = \"/precedent/detail/\" + string[1] + '/' + page\r\n                return(    \r\n                    <tr>\r\n                        <td className=\"widthTh\">{kind==='article'? (<span>{(page-1)*10+idx+1}</span>) : ( <span>{string[1]}</span>)}</td>\r\n                        <td>\r\n                          {kind==='article' ? (\r\n                          <details>\r\n                          <summary>{string[0]}</summary>\r\n                          <br/>\r\n                          <p>\r\n                          {string[1].map((str)=> { console.log(str); return <p>{str}</p>})}</p></details>) : (\r\n                            <span><Link to={url}  style={{ textDecoration: \"none\" }}>{string[2]}</Link></span>\r\n                          )}\r\n                          \r\n                        </td>\r\n                        <td>\r\n                          {\r\n                            typeof changeList === 'undefined' ? (<p></p>) : (\r\n                              <span onClick={()=>{\r\n                                //htmlList = changeList; console.log('1', htmlList); htmlList[idx] = '<i class=\"bi bi-star-fill\"></i>'; console.log('2', htmlList); setChangeList(htmlList); console.log('3', changeList);\r\n                                console.log('-------', idx)\r\n                                var seconds = now.getTime();\t// 초\r\n                                console.log(\"초 : \", seconds);\r\n                                console.log(changeList.slice(0,idx))\r\n                                const result = axios.get(\r\n                                  \"/checkLaw?jo=\" + string[0].split('조')[0]\r\n                                ).then(res => (\r\n                                  res.data.isExist ? (\r\n                                    setChangeList(changeList.slice(0,idx).concat(['<i class=\"bi bi-star\"></i>'], changeList.slice(idx+1, changeList.length)))\r\n                                  ) : (\r\n                                    setChangeList(changeList.slice(0,idx).concat(['<i class=\"bi bi-star-fill\"></i>'], changeList.slice(idx+1, changeList.length)))\r\n\r\n                                  )\r\n                                )).then(()=> \r\n                                {var seconds = now.getTime();\t// 초\r\n                                console.log(\"초 : \", seconds);})\r\n                                //setChangeList(changeList.slice(0,idx).concat([newHtml], changeList.slice(idx+1, changeList.length)))\r\n                              }} \r\n                              dangerouslySetInnerHTML={{ __html: changeList[idx] }}></span>\r\n                            )\r\n                          }\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n            </table>\r\n            <Paging/>\r\n        </div>\r\n    )\r\n      \r\n}\r\n\r\n\r\nexport default Table;","C:\\projects\\myproject\\law\\react\\src\\elements\\page.js",["194","195"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nconst Paging = ({kind, p, total, word, option, type, list}) => {\r\n  const [page, setPage] = useState(1);\r\n  let [l, setL] = useState();\r\n  useEffect(() => \r\n  {\r\n    setPage(p)\r\n    console.log(\"page, page:\", page)\r\n  }, [])\r\n  \r\n  useEffect(() => \r\n  {\r\n    setL(page)\r\n  }, [])\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n    \r\n    setL(page)\r\n    console.log(\"page, page2:\", page)\r\n    console.log('page, kind', kind)\r\n    //type === \"search\" &&(window.location.href = \"/search/\" + kind + \"/\" + word + \"/\" + option + \"/\" + page)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Pagination\r\n      activePage={page} // 현재 페이지\r\n      itemsCountPerPage={10} // 한 페이지랑 보여줄 아이템 갯수\r\n      totalItemsCount={total} // 총 아이템 갯수\r\n      pageRangeDisplayed={5} // paginator의 페이지 범위\r\n      prevPageText={\"‹\"} // \"이전\"을 나타낼 텍스트\r\n      nextPageText={\"›\"} // \"다음\"을 나타낼 텍스트\r\n      onChange={handlePageChange} // 페이지 변경을 핸들링하는 함수\r\n    />\r\n    <p>{l}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paging;","C:\\projects\\myproject\\law\\react\\src\\elements\\menubar.js",[],[],"C:\\projects\\myproject\\law\\react\\src\\components\\header.js",["196"],[],"\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Header() {\r\n    const [word, setWord] = useState(\"\");\r\n    let [option, setOption] = useState(\"\");\r\n    const onSubmit = async () => {\r\n      window.location.href = \"/search/\" + word + \"/\" + option;\r\n    };\r\n\r\n    const onOptChange = (e) => {\r\n      setOption(e.target.value);\r\n      console.log(option);\r\n    };\r\n  \r\n    return (\r\n     <div>\r\n      <select name=\"option\" id=\"option\" onChange={onOptChange}>\r\n                <option value=\"1\" class=\"opt\">통합검색</option>\r\n                <option value=\"2\" class=\"opt\">민법</option>\r\n                <option value=\"3\" class=\"opt\">판례</option>\r\n      </select>\r\n      <input\r\n      onChange={(e) => {\r\n      setWord(e.target.value);\r\n      console.log(word);\r\n      }}></input>\r\n  \r\n      <button\r\n       type=\"button\"\r\n       onClick={() => {\r\n       onSubmit();\r\n       }}></button>\r\n     </div>\r\n    );\r\n  }\r\n\r\n\r\n  export default Header;",{"ruleId":"197","severity":1,"message":"198","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":26,"column":6,"nodeType":"203","endLine":26,"endColumn":8,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":35,"column":7,"nodeType":"207","messageId":"208","endLine":35,"endColumn":43},{"ruleId":"205","severity":1,"message":"209","line":42,"column":32,"nodeType":"207","messageId":"208","endLine":42,"endColumn":87},{"ruleId":"205","severity":1,"message":"209","line":43,"column":12,"nodeType":"207","messageId":"208","endLine":43,"endColumn":64},{"ruleId":"205","severity":1,"message":"210","line":46,"column":12,"nodeType":"207","messageId":"208","endLine":46,"endColumn":155},{"ruleId":"197","severity":1,"message":"211","line":3,"column":20,"nodeType":"199","messageId":"200","endLine":3,"endColumn":29},{"ruleId":"197","severity":1,"message":"212","line":9,"column":10,"nodeType":"199","messageId":"200","endLine":9,"endColumn":20},{"ruleId":"197","severity":1,"message":"213","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":12},{"ruleId":"197","severity":1,"message":"214","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":18},{"ruleId":"197","severity":1,"message":"211","line":3,"column":20,"nodeType":"199","messageId":"200","endLine":3,"endColumn":29},{"ruleId":"197","severity":1,"message":"215","line":52,"column":10,"nodeType":"199","messageId":"200","endLine":52,"endColumn":23},{"ruleId":"205","severity":1,"message":"216","line":68,"column":63,"nodeType":"207","messageId":"208","endLine":68,"endColumn":79},{"ruleId":"205","severity":1,"message":"217","line":70,"column":58,"nodeType":"207","messageId":"208","endLine":70,"endColumn":77},{"ruleId":"197","severity":1,"message":"198","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":26,"column":6,"nodeType":"203","endLine":26,"endColumn":8,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"206","line":35,"column":7,"nodeType":"207","messageId":"208","endLine":35,"endColumn":43},{"ruleId":"205","severity":1,"message":"209","line":42,"column":32,"nodeType":"207","messageId":"208","endLine":42,"endColumn":87},{"ruleId":"205","severity":1,"message":"209","line":43,"column":12,"nodeType":"207","messageId":"208","endLine":43,"endColumn":64},{"ruleId":"205","severity":1,"message":"210","line":46,"column":12,"nodeType":"207","messageId":"208","endLine":46,"endColumn":155},{"ruleId":"197","severity":1,"message":"219","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":18},{"ruleId":"201","severity":1,"message":"220","line":21,"column":6,"nodeType":"203","endLine":21,"endColumn":8,"suggestions":"221"},{"ruleId":"205","severity":1,"message":"206","line":50,"column":11,"nodeType":"207","messageId":"208","endLine":50,"endColumn":37},{"ruleId":"197","severity":1,"message":"198","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":14},{"ruleId":"201","severity":1,"message":"222","line":25,"column":6,"nodeType":"203","endLine":25,"endColumn":8,"suggestions":"223"},{"ruleId":"205","severity":1,"message":"206","line":36,"column":7,"nodeType":"207","messageId":"208","endLine":36,"endColumn":43},{"ruleId":"205","severity":1,"message":"209","line":45,"column":11,"nodeType":"207","messageId":"208","endLine":45,"endColumn":68},{"ruleId":"205","severity":1,"message":"210","line":47,"column":12,"nodeType":"207","messageId":"208","endLine":47,"endColumn":179},{"ruleId":"205","severity":1,"message":"209","line":54,"column":11,"nodeType":"207","messageId":"208","endLine":54,"endColumn":65},{"ruleId":"205","severity":1,"message":"210","line":56,"column":12,"nodeType":"207","messageId":"208","endLine":56,"endColumn":179},{"ruleId":"197","severity":1,"message":"224","line":3,"column":34,"nodeType":"199","messageId":"200","endLine":3,"endColumn":45},{"ruleId":"225","severity":1,"message":"226","line":15,"column":66,"nodeType":"227","messageId":"228","endLine":15,"endColumn":67},{"ruleId":"225","severity":1,"message":"226","line":16,"column":41,"nodeType":"227","messageId":"228","endLine":16,"endColumn":42},{"ruleId":"201","severity":1,"message":"229","line":94,"column":6,"nodeType":"203","endLine":94,"endColumn":8,"suggestions":"230"},{"ruleId":"197","severity":1,"message":"231","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":18},{"ruleId":"201","severity":1,"message":"232","line":106,"column":6,"nodeType":"203","endLine":106,"endColumn":8,"suggestions":"233"},{"ruleId":"197","severity":1,"message":"211","line":3,"column":20,"nodeType":"199","messageId":"200","endLine":3,"endColumn":29},{"ruleId":"197","severity":1,"message":"234","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":14},{"ruleId":"197","severity":1,"message":"235","line":4,"column":16,"nodeType":"199","messageId":"200","endLine":4,"endColumn":22},{"ruleId":"197","severity":1,"message":"236","line":4,"column":24,"nodeType":"199","messageId":"200","endLine":4,"endColumn":33},{"ruleId":"197","severity":1,"message":"237","line":4,"column":35,"nodeType":"199","messageId":"200","endLine":4,"endColumn":38},{"ruleId":"197","severity":1,"message":"238","line":4,"column":40,"nodeType":"199","messageId":"200","endLine":4,"endColumn":43},{"ruleId":"197","severity":1,"message":"211","line":3,"column":20,"nodeType":"199","messageId":"200","endLine":3,"endColumn":29},{"ruleId":"197","severity":1,"message":"212","line":9,"column":10,"nodeType":"199","messageId":"200","endLine":9,"endColumn":20},{"ruleId":"197","severity":1,"message":"211","line":3,"column":20,"nodeType":"199","messageId":"200","endLine":3,"endColumn":29},{"ruleId":"201","severity":1,"message":"239","line":13,"column":6,"nodeType":"203","endLine":13,"endColumn":8,"suggestions":"240"},{"ruleId":"197","severity":1,"message":"241","line":34,"column":11,"nodeType":"199","messageId":"200","endLine":34,"endColumn":19},{"ruleId":"197","severity":1,"message":"242","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":45,"column":9,"nodeType":"245","messageId":"246","endLine":45,"endColumn":161},{"ruleId":"201","severity":1,"message":"247","line":47,"column":10,"nodeType":"203","endLine":47,"endColumn":12,"suggestions":"248"},{"ruleId":"225","severity":1,"message":"226","line":51,"column":47,"nodeType":"227","messageId":"228","endLine":51,"endColumn":48},{"ruleId":"225","severity":1,"message":"226","line":51,"column":59,"nodeType":"227","messageId":"228","endLine":51,"endColumn":60},{"ruleId":"225","severity":1,"message":"226","line":53,"column":47,"nodeType":"227","messageId":"228","endLine":53,"endColumn":48},{"ruleId":"225","severity":1,"message":"226","line":53,"column":61,"nodeType":"227","messageId":"228","endLine":53,"endColumn":62},{"ruleId":"197","severity":1,"message":"242","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"242","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"249","line":4,"column":31,"nodeType":"199","messageId":"200","endLine":4,"endColumn":37},{"ruleId":"197","severity":1,"message":"250","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":23},{"ruleId":"197","severity":1,"message":"251","line":8,"column":10,"nodeType":"199","messageId":"200","endLine":8,"endColumn":20},{"ruleId":"197","severity":1,"message":"252","line":13,"column":12,"nodeType":"199","messageId":"200","endLine":13,"endColumn":17},{"ruleId":"197","severity":1,"message":"253","line":13,"column":19,"nodeType":"199","messageId":"200","endLine":13,"endColumn":27},{"ruleId":"197","severity":1,"message":"254","line":14,"column":9,"nodeType":"199","messageId":"200","endLine":14,"endColumn":17},{"ruleId":"197","severity":1,"message":"255","line":16,"column":10,"nodeType":"199","messageId":"200","endLine":16,"endColumn":16},{"ruleId":"197","severity":1,"message":"256","line":16,"column":18,"nodeType":"199","messageId":"200","endLine":16,"endColumn":27},{"ruleId":"257","severity":1,"message":"258","line":29,"column":32,"nodeType":"227","messageId":"259","endLine":29,"endColumn":34},{"ruleId":"197","severity":1,"message":"260","line":40,"column":14,"nodeType":"199","messageId":"200","endLine":40,"endColumn":21},{"ruleId":"197","severity":1,"message":"261","line":55,"column":13,"nodeType":"199","messageId":"200","endLine":55,"endColumn":18},{"ruleId":"201","severity":1,"message":"262","line":65,"column":8,"nodeType":"203","endLine":65,"endColumn":10,"suggestions":"263"},{"ruleId":"201","severity":1,"message":"264","line":75,"column":6,"nodeType":"203","endLine":75,"endColumn":15,"suggestions":"265"},{"ruleId":"197","severity":1,"message":"255","line":139,"column":39,"nodeType":"199","messageId":"200","endLine":139,"endColumn":45},{"ruleId":"201","severity":1,"message":"266","line":11,"column":6,"nodeType":"203","endLine":11,"endColumn":8,"suggestions":"267"},{"ruleId":"201","severity":1,"message":"268","line":16,"column":6,"nodeType":"203","endLine":16,"endColumn":8,"suggestions":"269"},{"ruleId":"197","severity":1,"message":"211","line":2,"column":20,"nodeType":"199","messageId":"200","endLine":2,"endColumn":29},"no-unused-vars","'Paging' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'kind' and 'query'. Either include them or remove the dependency array.","ArrayExpression",["270"],"react/jsx-pascal-case","Imported JSX component Search_box must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Search_title must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Search_conts must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'logo' is defined but never used.","'useState' is defined but never used.","'BrowserRouter' is defined but never used.","Imported JSX component Search_detail must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Article_category must be in PascalCase or SCREAMING_SNAKE_CASE",["271"],"'Navigate' is defined but never used.","React Hook useEffect has missing dependencies: 'loginData' and 'option'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has missing dependencies: 'option' and 'query'. Either include them or remove the dependency array.",["273"],"'NavDropdown' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'c1', 'c2', and 'kind'. Either include them or remove the dependency array.",["274"],"'Search_box' is defined but never used.","React Hook useEffect has a missing dependency: 'num'. Either include it or remove the dependency array.",["275"],"'Form' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'opt' and 'q'. Either include them or remove the dependency array. If 'setOption' needs the current value of 'opt', you can also switch to useReducer instead of useState and read 'opt' in the reducer.",["276"],"'navigate' is assigned a value but never used.","'Header' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'kind', 'list', and 'page'. Either include them or remove the dependency array. If 'setCurList' needs the current value of 'list', you can also switch to useReducer instead of useState and read 'list' in the reducer.",["277"],"'useRef' is defined but never used.","'AiOutlineStar' is defined but never used.","'AiFillStar' is defined but never used.","'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","'htmlList' is assigned a value but never used.","'result' is assigned a value but never used.","'setResult' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'getData' is defined but never used.","'new_l' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'curList', 'list', 'now', 'page', and 'total'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurList' needs the current value of 'page'.",["278"],"React Hook useEffect has missing dependencies: 'generate_cgList' and 'isLoggedIn'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'p' and 'page'. Either include them or remove the dependency array. If 'setPage' needs the current value of 'p', you can also switch to useReducer instead of useState and read 'p' in the reducer.",["280"],"React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setL' needs the current value of 'page'.",["281"],{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [kind, query]",{"range":"305","text":"306"},{"range":"307","text":"306"},"Update the dependencies array to be: [loginData, option]",{"range":"308","text":"309"},"Update the dependencies array to be: [option, query]",{"range":"310","text":"311"},"Update the dependencies array to be: [c1, c2, kind]",{"range":"312","text":"313"},"Update the dependencies array to be: [num]",{"range":"314","text":"315"},"Update the dependencies array to be: [opt, q]",{"range":"316","text":"317"},"Update the dependencies array to be: [kind, list, page]",{"range":"318","text":"319"},"Update the dependencies array to be: [curList, list, now, page, total]",{"range":"320","text":"321"},"Update the dependencies array to be: [curList, generate_cgList, isLoggedIn]",{"range":"322","text":"323"},"Update the dependencies array to be: [p, page]",{"range":"324","text":"325"},"Update the dependencies array to be: [page]",{"range":"326","text":"327"},[810,812],"[kind, query]",[810,812],[629,631],"[loginData, option]",[769,771],"[option, query]",[3437,3439],"[c1, c2, kind]",[3458,3460],"[num]",[324,326],"[opt, q]",[1786,1788],"[kind, list, page]",[2233,2235],"[curList, list, now, page, total]",[2591,2600],"[curList, generate_cgList, isLoggedIn]",[323,325],"[p, page]",[378,380],"[page]"]